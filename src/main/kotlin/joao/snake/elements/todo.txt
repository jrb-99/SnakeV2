TODO list:

- [ ] Body parts orientation
- [ ] Don't allow the snake to turn to occupied cells
- [ ] Points system and screen
- [ ] Game over conditions
- [ ] Fix apple spawn
- [ ] Bricks spawn


BODY METHOD
fun snakeImgB(list: List<Position>, index: Int): String {

            val p1 = list[index-1] //front position
            val p2 = list[index] //middle position
            val p3 = list[index+1] //back position

        println("${p1} | ${p2} | ${p3}")

            if (p1.x == p2.x && p2.x == p3.x) {
                //Horizontal
                return S_B_V
            } else if (p1.y == p2.y && p2.y == p3.y) {
                //Vertical
                return S_B_H
            } else if(p1.x == p2.x && p2.y == p3.y && p2.x < p3.x){
                //Left to down
                println("Condition 1")
                return S_B_C2
            } else if (p1.x == p2.x && p2.x < p3.x && p2.y == p3.y){
                //Left to up
                println("Condition 2")
                return S_B_C3
            } else if(p1.x == p2.x && p2.y == p3.y && p2.x > p3.x){
                //Right to down
                println("Condition 3")
                return S_B_C1
            } else if (p1.x == p2.x && p2.x > p3.x && p1.y < p3.y){
                //Right to up
                println("Condition 4")
                return S_B_C4
            } else if (p1.x < p2.x && p2.x == p3.x && p2.y < p3.y){
                //Up to left
                println("Condition 5")
                return S_B_C1
            } else if (p1.x > p2.x && p2.x == p3.x && p2.y < p3.y){
                //Up to right
                println("Condition 6")
                return S_B_C2
            } else if(p1.x < p2.x && p1.y == p2.y && p2.x == p3.x){
                //Down to left
                println("Condition 7")
                return S_B_C4
            } else if(p1.x > p2.x && p1.y == p2.y && p2.x == p3.x){
                //Down to right
                println("Condition 8")
                return S_B_C3
            }

            println("No condition")
            return S_B_C1

    }
